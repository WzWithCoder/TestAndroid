plugins {
    id 'com.android.library'
}

android {
    compileSdkVersion CompileSdkVersion
    buildToolsVersion BuildToolsVersion

    defaultConfig {
        minSdkVersion MinSdkVersion
        targetSdkVersion TargetSdkVersion

        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        disable "UnsafeExperimentalUsageError",
                "UnsafeExperimentalUsageWarning"
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

configurations {
    lintLibrary
}

dependencies {
    lintLibrary project(path: ":lint-checker", configuration: "lintChecks")
}

task copyLintJar(type: Copy) {
    from(configurations.lintLibrary) {
        rename {
            String fileName -> 'lint.jar'
        }
    }
    into 'build/intermediates/lint/'
}

project.afterEvaluate {
    def compileLintTask = project.tasks.find { it.name == 'compileLint' }
    compileLintTask.dependsOn(copyLintJar)
}